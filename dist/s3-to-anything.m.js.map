{"version":3,"file":"s3-to-anything.m.js","sources":["../src/s3-to-anything.js"],"sourcesContent":["const util  = require('util');\nconst async = require('async');\n\nconst S3EventParser = require('./s3-event-parser');\n\nclass S3ToAnything {\n\n  /**\n   * @param {Object} event Event sent by S3\n   */\n  constructor(event) {\n    console.log('Reading options from event:\\n', util.inspect(event, {depth: 5}));\n    this.observers = [];\n\n    const S3Event = S3EventParser.parse(event);\n\n    this.srcBucket = S3Event.bucketName;\n    this.srcKey    = S3Event.filePath;\n    this.keyPrefix = S3Event.filePrefix;\n\n    console.log('srcBucket :\\n', this.srcBucket);\n    console.log('srcKey :\\n', this.srcKey);\n    console.log('keyPrefix :\\n', this.keyPrefix);\n  }\n\n  /**\n   * Perform the whole process of synchronization with GoToWebinar\n   *\n   * @param {function} callback? Callback Function called at the end of the process\n   * @return {*} callback return or async.waterfall object\n   */\n  process(callback) {\n    const next = callback || (() => null);\n\n    // Check if the current file must be processed\n    if (!this.isProcessAllowed()) {\n      console.warn('File prefix not supported. Skiping process.');\n\n      return next(null, true);\n    }\n\n    console.log('Processing');\n\n    return async.waterfall([\n      next => this.downloadFile(next),\n      (data, next) => this.notifyObservers(data, next),\n    ],\n    (err) => { // On done\n      if (err) {\n        console.error(err);\n\n        return next(err);\n      } else {\n        console.log('Process completed.');\n\n        return next(null, true);\n      }\n    });\n  }\n\n  /**\n   * @param {Object} data JSON file\n   * @param {function} next Callback\n   * @return {function} Next()\n   */\n  notifyObservers(data, next) {\n    this.observers.map(observer => observer(data));\n\n    return next(null, data);\n  }\n\n  /**\n   * Set the S3 client that will be responsible for downloading objects\n   * @param {S3Client} client S3 client\n   * @return {S3ToAnything} Fluent setter\n   */\n  setS3Client(client) {\n    this.s3Client = client;\n\n    return this;\n  }\n\n  /**\n   * Download file notified in the event from S3\n   *\n   * @param {function} next Function called at the end of file downloading attempt\n   * @return {Request<S3.GetObjectOutput, AWSError>} AWS S3 client request object\n   */\n  downloadFile(next) {\n    if (undefined === this.s3Client) {\n      throw new Error('S3Client has not been set.');\n    }\n    // Download the file from S3 into a buffer.\n    console.info('Download file from S3');\n\n    return this.s3Client.download(this.srcBucket, this.srcKey, next);\n  }\n\n  /**\n   * Adds an observer that will be notified when the file has been downloaded and read\n   * @param {function} observer Callback to be executed with the read file\n   * @return {S3ToAnything} Fluent setter\n   */\n  addObserver(observer) {\n    this.observers.push(observer);\n\n    return this;\n  }\n\n  /**\n   * Check if the file must be processed or not\n   * @return {boolean} return true if the file must be processed\n   */\n  isProcessAllowed() {\n    return this.keyPrefix === process.env.S3_ALLOWED_PREFIX;\n  }\n}\n\nexport default S3ToAnything;\n"],"names":["const","util","require","async","S3EventParser","S3ToAnything","event","log","inspect","observers","S3Event","parse","srcBucket","bucketName","srcKey","filePath","keyPrefix","filePrefix","this","process","callback","next","isProcessAllowed","waterfall","downloadFile","data","notifyObservers","err","error","warn","map","observer","setS3Client","client","s3Client","undefined","Error","info","download","addObserver","push","env","S3_ALLOWED_PREFIX"],"mappings":"AAAAA,IAAMC,EAAQC,QAAQ,QAChBC,EAAQD,QAAQ,SAEhBE,EAAgBF,QAAQ,qBAExBG,EAKJ,SAAYC,WACFC,IAAI,gCAAiCN,EAAKO,QAAQF,SAAe,UACpEG,iBAECC,EAAUN,EAAcO,MAAML,QAE/BM,UAAYF,EAAQG,gBACpBC,OAAYJ,EAAQK,cACpBC,UAAYN,EAAQO,mBAEjBV,IAAI,gBAAiBW,KAAKN,mBAC1BL,IAAI,aAAcW,KAAKJ,gBACvBP,IAAI,gBAAiBW,KAAKF,wBASpCG,iBAAQC,cACAC,EAAOD,qBAAmB,aAG3BF,KAAKI,4BAMFf,IAAI,cAELJ,EAAMoB,oBACXF,UAAQH,EAAKM,aAAaH,aACzBI,EAAMJ,UAASH,EAAKQ,gBAAgBD,EAAMJ,cAE5CM,UACKA,WACMC,MAAMD,GAEPN,EAAKM,aAEJpB,IAAI,sBAELc,EAAK,MAAM,gBAnBZQ,KAAK,+CAENR,EAAK,MAAM,iBA2BtBK,yBAAgBD,EAAMJ,eACfZ,UAAUqB,aAAIC,UAAYA,EAASN,KAEjCJ,EAAK,KAAMI,gBAQpBO,qBAAYC,eACLC,SAAWD,EAETf,kBASTM,sBAAaH,WACPc,IAAcjB,KAAKgB,eACf,IAAIE,MAAM,6CAGVC,KAAK,yBAENnB,KAAKgB,SAASI,SAASpB,KAAKN,UAAWM,KAAKJ,OAAQO,gBAQ7DkB,qBAAYR,eACLtB,UAAU+B,KAAKT,GAEbb,kBAOTI,mCACSJ,KAAKF,YAAcG,QAAQsB,IAAIC"}